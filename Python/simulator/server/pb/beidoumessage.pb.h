// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: beidoumessage.proto

#ifndef PROTOBUF_beidoumessage_2eproto__INCLUDED
#define PROTOBUF_beidoumessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_beidoumessage_2eproto();
void protobuf_AssignDesc_beidoumessage_2eproto();
void protobuf_ShutdownFile_beidoumessage_2eproto();

class Communication;
class Positioninfo;
class Communicationreceipt;
class Beidoumessage;

// ===================================================================

class Communication : public ::google::protobuf::Message {
 public:
  Communication();
  virtual ~Communication();

  Communication(const Communication& from);

  inline Communication& operator=(const Communication& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Communication& default_instance();

  void Swap(Communication* other);

  // implements Message ----------------------------------------------

  Communication* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Communication& from);
  void MergeFrom(const Communication& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 messageform = 1;
  inline bool has_messageform() const;
  inline void clear_messageform();
  static const int kMessageformFieldNumber = 1;
  inline ::google::protobuf::uint32 messageform() const;
  inline void set_messageform(::google::protobuf::uint32 value);

  // optional uint32 messagecategory = 2;
  inline bool has_messagecategory() const;
  inline void clear_messagecategory();
  static const int kMessagecategoryFieldNumber = 2;
  inline ::google::protobuf::uint32 messagecategory() const;
  inline void set_messagecategory(::google::protobuf::uint32 value);

  // optional uint32 encryption = 3;
  inline bool has_encryption() const;
  inline void clear_encryption();
  static const int kEncryptionFieldNumber = 3;
  inline ::google::protobuf::uint32 encryption() const;
  inline void set_encryption(::google::protobuf::uint32 value);

  // optional uint32 sendaddr = 4;
  inline bool has_sendaddr() const;
  inline void clear_sendaddr();
  static const int kSendaddrFieldNumber = 4;
  inline ::google::protobuf::uint32 sendaddr() const;
  inline void set_sendaddr(::google::protobuf::uint32 value);

  // optional uint32 recvaddr = 5;
  inline bool has_recvaddr() const;
  inline void clear_recvaddr();
  static const int kRecvaddrFieldNumber = 5;
  inline ::google::protobuf::uint32 recvaddr() const;
  inline void set_recvaddr(::google::protobuf::uint32 value);

  // optional uint32 sendtime_hour = 6;
  inline bool has_sendtime_hour() const;
  inline void clear_sendtime_hour();
  static const int kSendtimeHourFieldNumber = 6;
  inline ::google::protobuf::uint32 sendtime_hour() const;
  inline void set_sendtime_hour(::google::protobuf::uint32 value);

  // optional uint32 sendtime_minute = 7;
  inline bool has_sendtime_minute() const;
  inline void clear_sendtime_minute();
  static const int kSendtimeMinuteFieldNumber = 7;
  inline ::google::protobuf::uint32 sendtime_minute() const;
  inline void set_sendtime_minute(::google::protobuf::uint32 value);

  // optional uint32 sendtime_second = 8;
  inline bool has_sendtime_second() const;
  inline void clear_sendtime_second();
  static const int kSendtimeSecondFieldNumber = 8;
  inline ::google::protobuf::uint32 sendtime_second() const;
  inline void set_sendtime_second(::google::protobuf::uint32 value);

  // optional uint32 messagelength = 9;
  inline bool has_messagelength() const;
  inline void clear_messagelength();
  static const int kMessagelengthFieldNumber = 9;
  inline ::google::protobuf::uint32 messagelength() const;
  inline void set_messagelength(::google::protobuf::uint32 value);

  // optional bytes key = 10;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 10;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional bytes messagebuffer = 11;
  inline bool has_messagebuffer() const;
  inline void clear_messagebuffer();
  static const int kMessagebufferFieldNumber = 11;
  inline const ::std::string& messagebuffer() const;
  inline void set_messagebuffer(const ::std::string& value);
  inline void set_messagebuffer(const char* value);
  inline void set_messagebuffer(const void* value, size_t size);
  inline ::std::string* mutable_messagebuffer();
  inline ::std::string* release_messagebuffer();
  inline void set_allocated_messagebuffer(::std::string* messagebuffer);

  // @@protoc_insertion_point(class_scope:Communication)
 private:
  inline void set_has_messageform();
  inline void clear_has_messageform();
  inline void set_has_messagecategory();
  inline void clear_has_messagecategory();
  inline void set_has_encryption();
  inline void clear_has_encryption();
  inline void set_has_sendaddr();
  inline void clear_has_sendaddr();
  inline void set_has_recvaddr();
  inline void clear_has_recvaddr();
  inline void set_has_sendtime_hour();
  inline void clear_has_sendtime_hour();
  inline void set_has_sendtime_minute();
  inline void clear_has_sendtime_minute();
  inline void set_has_sendtime_second();
  inline void clear_has_sendtime_second();
  inline void set_has_messagelength();
  inline void clear_has_messagelength();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_messagebuffer();
  inline void clear_has_messagebuffer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 messageform_;
  ::google::protobuf::uint32 messagecategory_;
  ::google::protobuf::uint32 encryption_;
  ::google::protobuf::uint32 sendaddr_;
  ::google::protobuf::uint32 recvaddr_;
  ::google::protobuf::uint32 sendtime_hour_;
  ::google::protobuf::uint32 sendtime_minute_;
  ::google::protobuf::uint32 sendtime_second_;
  ::std::string* key_;
  ::std::string* messagebuffer_;
  ::google::protobuf::uint32 messagelength_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_beidoumessage_2eproto();
  friend void protobuf_AssignDesc_beidoumessage_2eproto();
  friend void protobuf_ShutdownFile_beidoumessage_2eproto();

  void InitAsDefaultInstance();
  static Communication* default_instance_;
};
// -------------------------------------------------------------------

class Positioninfo : public ::google::protobuf::Message {
 public:
  Positioninfo();
  virtual ~Positioninfo();

  Positioninfo(const Positioninfo& from);

  inline Positioninfo& operator=(const Positioninfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Positioninfo& default_instance();

  void Swap(Positioninfo* other);

  // implements Message ----------------------------------------------

  Positioninfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Positioninfo& from);
  void MergeFrom(const Positioninfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // optional uint32 encryption = 2;
  inline bool has_encryption() const;
  inline void clear_encryption();
  static const int kEncryptionFieldNumber = 2;
  inline ::google::protobuf::uint32 encryption() const;
  inline void set_encryption(::google::protobuf::uint32 value);

  // optional uint32 accuracy = 3;
  inline bool has_accuracy() const;
  inline void clear_accuracy();
  static const int kAccuracyFieldNumber = 3;
  inline ::google::protobuf::uint32 accuracy() const;
  inline void set_accuracy(::google::protobuf::uint32 value);

  // optional uint32 emergencypostion = 4;
  inline bool has_emergencypostion() const;
  inline void clear_emergencypostion();
  static const int kEmergencypostionFieldNumber = 4;
  inline ::google::protobuf::uint32 emergencypostion() const;
  inline void set_emergencypostion(::google::protobuf::uint32 value);

  // optional uint32 multivaluesolution = 5;
  inline bool has_multivaluesolution() const;
  inline void clear_multivaluesolution();
  static const int kMultivaluesolutionFieldNumber = 5;
  inline ::google::protobuf::uint32 multivaluesolution() const;
  inline void set_multivaluesolution(::google::protobuf::uint32 value);

  // optional bytes key = 6;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 6;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional uint32 applaytime_hour = 7;
  inline bool has_applaytime_hour() const;
  inline void clear_applaytime_hour();
  static const int kApplaytimeHourFieldNumber = 7;
  inline ::google::protobuf::uint32 applaytime_hour() const;
  inline void set_applaytime_hour(::google::protobuf::uint32 value);

  // optional uint32 applaytime_minute = 8;
  inline bool has_applaytime_minute() const;
  inline void clear_applaytime_minute();
  static const int kApplaytimeMinuteFieldNumber = 8;
  inline ::google::protobuf::uint32 applaytime_minute() const;
  inline void set_applaytime_minute(::google::protobuf::uint32 value);

  // optional uint32 applaytime_second = 9;
  inline bool has_applaytime_second() const;
  inline void clear_applaytime_second();
  static const int kApplaytimeSecondFieldNumber = 9;
  inline ::google::protobuf::uint32 applaytime_second() const;
  inline void set_applaytime_second(::google::protobuf::uint32 value);

  // optional uint32 applaytime_tenths = 10;
  inline bool has_applaytime_tenths() const;
  inline void clear_applaytime_tenths();
  static const int kApplaytimeTenthsFieldNumber = 10;
  inline ::google::protobuf::uint32 applaytime_tenths() const;
  inline void set_applaytime_tenths(::google::protobuf::uint32 value);

  // optional uint32 longitude_degree = 11;
  inline bool has_longitude_degree() const;
  inline void clear_longitude_degree();
  static const int kLongitudeDegreeFieldNumber = 11;
  inline ::google::protobuf::uint32 longitude_degree() const;
  inline void set_longitude_degree(::google::protobuf::uint32 value);

  // optional uint32 longitude_minute = 12;
  inline bool has_longitude_minute() const;
  inline void clear_longitude_minute();
  static const int kLongitudeMinuteFieldNumber = 12;
  inline ::google::protobuf::uint32 longitude_minute() const;
  inline void set_longitude_minute(::google::protobuf::uint32 value);

  // optional uint32 longitude_second = 13;
  inline bool has_longitude_second() const;
  inline void clear_longitude_second();
  static const int kLongitudeSecondFieldNumber = 13;
  inline ::google::protobuf::uint32 longitude_second() const;
  inline void set_longitude_second(::google::protobuf::uint32 value);

  // optional uint32 longitude_tenths = 14;
  inline bool has_longitude_tenths() const;
  inline void clear_longitude_tenths();
  static const int kLongitudeTenthsFieldNumber = 14;
  inline ::google::protobuf::uint32 longitude_tenths() const;
  inline void set_longitude_tenths(::google::protobuf::uint32 value);

  // optional uint32 latitude_degree = 15;
  inline bool has_latitude_degree() const;
  inline void clear_latitude_degree();
  static const int kLatitudeDegreeFieldNumber = 15;
  inline ::google::protobuf::uint32 latitude_degree() const;
  inline void set_latitude_degree(::google::protobuf::uint32 value);

  // optional uint32 latitude_minute = 16;
  inline bool has_latitude_minute() const;
  inline void clear_latitude_minute();
  static const int kLatitudeMinuteFieldNumber = 16;
  inline ::google::protobuf::uint32 latitude_minute() const;
  inline void set_latitude_minute(::google::protobuf::uint32 value);

  // optional uint32 latitude_second = 17;
  inline bool has_latitude_second() const;
  inline void clear_latitude_second();
  static const int kLatitudeSecondFieldNumber = 17;
  inline ::google::protobuf::uint32 latitude_second() const;
  inline void set_latitude_second(::google::protobuf::uint32 value);

  // optional uint32 latitude_tenths = 18;
  inline bool has_latitude_tenths() const;
  inline void clear_latitude_tenths();
  static const int kLatitudeTenthsFieldNumber = 18;
  inline ::google::protobuf::uint32 latitude_tenths() const;
  inline void set_latitude_tenths(::google::protobuf::uint32 value);

  // optional int32 geodeticheight = 19;
  inline bool has_geodeticheight() const;
  inline void clear_geodeticheight();
  static const int kGeodeticheightFieldNumber = 19;
  inline ::google::protobuf::int32 geodeticheight() const;
  inline void set_geodeticheight(::google::protobuf::int32 value);

  // optional int32 detlaelevation = 20;
  inline bool has_detlaelevation() const;
  inline void clear_detlaelevation();
  static const int kDetlaelevationFieldNumber = 20;
  inline ::google::protobuf::int32 detlaelevation() const;
  inline void set_detlaelevation(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Positioninfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_encryption();
  inline void clear_has_encryption();
  inline void set_has_accuracy();
  inline void clear_has_accuracy();
  inline void set_has_emergencypostion();
  inline void clear_has_emergencypostion();
  inline void set_has_multivaluesolution();
  inline void clear_has_multivaluesolution();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_applaytime_hour();
  inline void clear_has_applaytime_hour();
  inline void set_has_applaytime_minute();
  inline void clear_has_applaytime_minute();
  inline void set_has_applaytime_second();
  inline void clear_has_applaytime_second();
  inline void set_has_applaytime_tenths();
  inline void clear_has_applaytime_tenths();
  inline void set_has_longitude_degree();
  inline void clear_has_longitude_degree();
  inline void set_has_longitude_minute();
  inline void clear_has_longitude_minute();
  inline void set_has_longitude_second();
  inline void clear_has_longitude_second();
  inline void set_has_longitude_tenths();
  inline void clear_has_longitude_tenths();
  inline void set_has_latitude_degree();
  inline void clear_has_latitude_degree();
  inline void set_has_latitude_minute();
  inline void clear_has_latitude_minute();
  inline void set_has_latitude_second();
  inline void clear_has_latitude_second();
  inline void set_has_latitude_tenths();
  inline void clear_has_latitude_tenths();
  inline void set_has_geodeticheight();
  inline void clear_has_geodeticheight();
  inline void set_has_detlaelevation();
  inline void clear_has_detlaelevation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 encryption_;
  ::google::protobuf::uint32 accuracy_;
  ::google::protobuf::uint32 emergencypostion_;
  ::std::string* key_;
  ::google::protobuf::uint32 multivaluesolution_;
  ::google::protobuf::uint32 applaytime_hour_;
  ::google::protobuf::uint32 applaytime_minute_;
  ::google::protobuf::uint32 applaytime_second_;
  ::google::protobuf::uint32 applaytime_tenths_;
  ::google::protobuf::uint32 longitude_degree_;
  ::google::protobuf::uint32 longitude_minute_;
  ::google::protobuf::uint32 longitude_second_;
  ::google::protobuf::uint32 longitude_tenths_;
  ::google::protobuf::uint32 latitude_degree_;
  ::google::protobuf::uint32 latitude_minute_;
  ::google::protobuf::uint32 latitude_second_;
  ::google::protobuf::uint32 latitude_tenths_;
  ::google::protobuf::int32 geodeticheight_;
  ::google::protobuf::int32 detlaelevation_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];

  friend void  protobuf_AddDesc_beidoumessage_2eproto();
  friend void protobuf_AssignDesc_beidoumessage_2eproto();
  friend void protobuf_ShutdownFile_beidoumessage_2eproto();

  void InitAsDefaultInstance();
  static Positioninfo* default_instance_;
};
// -------------------------------------------------------------------

class Communicationreceipt : public ::google::protobuf::Message {
 public:
  Communicationreceipt();
  virtual ~Communicationreceipt();

  Communicationreceipt(const Communicationreceipt& from);

  inline Communicationreceipt& operator=(const Communicationreceipt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Communicationreceipt& default_instance();

  void Swap(Communicationreceipt* other);

  // implements Message ----------------------------------------------

  Communicationreceipt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Communicationreceipt& from);
  void MergeFrom(const Communicationreceipt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 sendaddr = 1;
  inline bool has_sendaddr() const;
  inline void clear_sendaddr();
  static const int kSendaddrFieldNumber = 1;
  inline ::google::protobuf::uint32 sendaddr() const;
  inline void set_sendaddr(::google::protobuf::uint32 value);

  // optional uint32 recvaddr = 2;
  inline bool has_recvaddr() const;
  inline void clear_recvaddr();
  static const int kRecvaddrFieldNumber = 2;
  inline ::google::protobuf::uint32 recvaddr() const;
  inline void set_recvaddr(::google::protobuf::uint32 value);

  // optional uint32 receipttime_hour = 3;
  inline bool has_receipttime_hour() const;
  inline void clear_receipttime_hour();
  static const int kReceipttimeHourFieldNumber = 3;
  inline ::google::protobuf::uint32 receipttime_hour() const;
  inline void set_receipttime_hour(::google::protobuf::uint32 value);

  // optional uint32 receipttime_minute = 4;
  inline bool has_receipttime_minute() const;
  inline void clear_receipttime_minute();
  static const int kReceipttimeMinuteFieldNumber = 4;
  inline ::google::protobuf::uint32 receipttime_minute() const;
  inline void set_receipttime_minute(::google::protobuf::uint32 value);

  // optional uint32 receipttime_second = 5;
  inline bool has_receipttime_second() const;
  inline void clear_receipttime_second();
  static const int kReceipttimeSecondFieldNumber = 5;
  inline ::google::protobuf::uint32 receipttime_second() const;
  inline void set_receipttime_second(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Communicationreceipt)
 private:
  inline void set_has_sendaddr();
  inline void clear_has_sendaddr();
  inline void set_has_recvaddr();
  inline void clear_has_recvaddr();
  inline void set_has_receipttime_hour();
  inline void clear_has_receipttime_hour();
  inline void set_has_receipttime_minute();
  inline void clear_has_receipttime_minute();
  inline void set_has_receipttime_second();
  inline void clear_has_receipttime_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 sendaddr_;
  ::google::protobuf::uint32 recvaddr_;
  ::google::protobuf::uint32 receipttime_hour_;
  ::google::protobuf::uint32 receipttime_minute_;
  ::google::protobuf::uint32 receipttime_second_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_beidoumessage_2eproto();
  friend void protobuf_AssignDesc_beidoumessage_2eproto();
  friend void protobuf_ShutdownFile_beidoumessage_2eproto();

  void InitAsDefaultInstance();
  static Communicationreceipt* default_instance_;
};
// -------------------------------------------------------------------

class Beidoumessage : public ::google::protobuf::Message {
 public:
  Beidoumessage();
  virtual ~Beidoumessage();

  Beidoumessage(const Beidoumessage& from);

  inline Beidoumessage& operator=(const Beidoumessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Beidoumessage& default_instance();

  void Swap(Beidoumessage* other);

  // implements Message ----------------------------------------------

  Beidoumessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Beidoumessage& from);
  void MergeFrom(const Beidoumessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 messagetype = 1;
  inline bool has_messagetype() const;
  inline void clear_messagetype();
  static const int kMessagetypeFieldNumber = 1;
  inline ::google::protobuf::uint32 messagetype() const;
  inline void set_messagetype(::google::protobuf::uint32 value);

  // optional .Communication commuincation = 2;
  inline bool has_commuincation() const;
  inline void clear_commuincation();
  static const int kCommuincationFieldNumber = 2;
  inline const ::Communication& commuincation() const;
  inline ::Communication* mutable_commuincation();
  inline ::Communication* release_commuincation();
  inline void set_allocated_commuincation(::Communication* commuincation);

  // optional .Communicationreceipt communicationreceipt = 3;
  inline bool has_communicationreceipt() const;
  inline void clear_communicationreceipt();
  static const int kCommunicationreceiptFieldNumber = 3;
  inline const ::Communicationreceipt& communicationreceipt() const;
  inline ::Communicationreceipt* mutable_communicationreceipt();
  inline ::Communicationreceipt* release_communicationreceipt();
  inline void set_allocated_communicationreceipt(::Communicationreceipt* communicationreceipt);

  // optional .Positioninfo positioninfo = 4;
  inline bool has_positioninfo() const;
  inline void clear_positioninfo();
  static const int kPositioninfoFieldNumber = 4;
  inline const ::Positioninfo& positioninfo() const;
  inline ::Positioninfo* mutable_positioninfo();
  inline ::Positioninfo* release_positioninfo();
  inline void set_allocated_positioninfo(::Positioninfo* positioninfo);

  // @@protoc_insertion_point(class_scope:Beidoumessage)
 private:
  inline void set_has_messagetype();
  inline void clear_has_messagetype();
  inline void set_has_commuincation();
  inline void clear_has_commuincation();
  inline void set_has_communicationreceipt();
  inline void clear_has_communicationreceipt();
  inline void set_has_positioninfo();
  inline void clear_has_positioninfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Communication* commuincation_;
  ::Communicationreceipt* communicationreceipt_;
  ::Positioninfo* positioninfo_;
  ::google::protobuf::uint32 messagetype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_beidoumessage_2eproto();
  friend void protobuf_AssignDesc_beidoumessage_2eproto();
  friend void protobuf_ShutdownFile_beidoumessage_2eproto();

  void InitAsDefaultInstance();
  static Beidoumessage* default_instance_;
};
// ===================================================================


// ===================================================================

// Communication

// optional uint32 messageform = 1;
inline bool Communication::has_messageform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Communication::set_has_messageform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Communication::clear_has_messageform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Communication::clear_messageform() {
  messageform_ = 0u;
  clear_has_messageform();
}
inline ::google::protobuf::uint32 Communication::messageform() const {
  return messageform_;
}
inline void Communication::set_messageform(::google::protobuf::uint32 value) {
  set_has_messageform();
  messageform_ = value;
}

// optional uint32 messagecategory = 2;
inline bool Communication::has_messagecategory() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Communication::set_has_messagecategory() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Communication::clear_has_messagecategory() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Communication::clear_messagecategory() {
  messagecategory_ = 0u;
  clear_has_messagecategory();
}
inline ::google::protobuf::uint32 Communication::messagecategory() const {
  return messagecategory_;
}
inline void Communication::set_messagecategory(::google::protobuf::uint32 value) {
  set_has_messagecategory();
  messagecategory_ = value;
}

// optional uint32 encryption = 3;
inline bool Communication::has_encryption() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Communication::set_has_encryption() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Communication::clear_has_encryption() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Communication::clear_encryption() {
  encryption_ = 0u;
  clear_has_encryption();
}
inline ::google::protobuf::uint32 Communication::encryption() const {
  return encryption_;
}
inline void Communication::set_encryption(::google::protobuf::uint32 value) {
  set_has_encryption();
  encryption_ = value;
}

// optional uint32 sendaddr = 4;
inline bool Communication::has_sendaddr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Communication::set_has_sendaddr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Communication::clear_has_sendaddr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Communication::clear_sendaddr() {
  sendaddr_ = 0u;
  clear_has_sendaddr();
}
inline ::google::protobuf::uint32 Communication::sendaddr() const {
  return sendaddr_;
}
inline void Communication::set_sendaddr(::google::protobuf::uint32 value) {
  set_has_sendaddr();
  sendaddr_ = value;
}

// optional uint32 recvaddr = 5;
inline bool Communication::has_recvaddr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Communication::set_has_recvaddr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Communication::clear_has_recvaddr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Communication::clear_recvaddr() {
  recvaddr_ = 0u;
  clear_has_recvaddr();
}
inline ::google::protobuf::uint32 Communication::recvaddr() const {
  return recvaddr_;
}
inline void Communication::set_recvaddr(::google::protobuf::uint32 value) {
  set_has_recvaddr();
  recvaddr_ = value;
}

// optional uint32 sendtime_hour = 6;
inline bool Communication::has_sendtime_hour() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Communication::set_has_sendtime_hour() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Communication::clear_has_sendtime_hour() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Communication::clear_sendtime_hour() {
  sendtime_hour_ = 0u;
  clear_has_sendtime_hour();
}
inline ::google::protobuf::uint32 Communication::sendtime_hour() const {
  return sendtime_hour_;
}
inline void Communication::set_sendtime_hour(::google::protobuf::uint32 value) {
  set_has_sendtime_hour();
  sendtime_hour_ = value;
}

// optional uint32 sendtime_minute = 7;
inline bool Communication::has_sendtime_minute() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Communication::set_has_sendtime_minute() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Communication::clear_has_sendtime_minute() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Communication::clear_sendtime_minute() {
  sendtime_minute_ = 0u;
  clear_has_sendtime_minute();
}
inline ::google::protobuf::uint32 Communication::sendtime_minute() const {
  return sendtime_minute_;
}
inline void Communication::set_sendtime_minute(::google::protobuf::uint32 value) {
  set_has_sendtime_minute();
  sendtime_minute_ = value;
}

// optional uint32 sendtime_second = 8;
inline bool Communication::has_sendtime_second() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Communication::set_has_sendtime_second() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Communication::clear_has_sendtime_second() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Communication::clear_sendtime_second() {
  sendtime_second_ = 0u;
  clear_has_sendtime_second();
}
inline ::google::protobuf::uint32 Communication::sendtime_second() const {
  return sendtime_second_;
}
inline void Communication::set_sendtime_second(::google::protobuf::uint32 value) {
  set_has_sendtime_second();
  sendtime_second_ = value;
}

// optional uint32 messagelength = 9;
inline bool Communication::has_messagelength() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Communication::set_has_messagelength() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Communication::clear_has_messagelength() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Communication::clear_messagelength() {
  messagelength_ = 0u;
  clear_has_messagelength();
}
inline ::google::protobuf::uint32 Communication::messagelength() const {
  return messagelength_;
}
inline void Communication::set_messagelength(::google::protobuf::uint32 value) {
  set_has_messagelength();
  messagelength_ = value;
}

// optional bytes key = 10;
inline bool Communication::has_key() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Communication::set_has_key() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Communication::clear_has_key() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Communication::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& Communication::key() const {
  return *key_;
}
inline void Communication::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void Communication::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void Communication::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Communication::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* Communication::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Communication::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes messagebuffer = 11;
inline bool Communication::has_messagebuffer() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Communication::set_has_messagebuffer() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Communication::clear_has_messagebuffer() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Communication::clear_messagebuffer() {
  if (messagebuffer_ != &::google::protobuf::internal::kEmptyString) {
    messagebuffer_->clear();
  }
  clear_has_messagebuffer();
}
inline const ::std::string& Communication::messagebuffer() const {
  return *messagebuffer_;
}
inline void Communication::set_messagebuffer(const ::std::string& value) {
  set_has_messagebuffer();
  if (messagebuffer_ == &::google::protobuf::internal::kEmptyString) {
    messagebuffer_ = new ::std::string;
  }
  messagebuffer_->assign(value);
}
inline void Communication::set_messagebuffer(const char* value) {
  set_has_messagebuffer();
  if (messagebuffer_ == &::google::protobuf::internal::kEmptyString) {
    messagebuffer_ = new ::std::string;
  }
  messagebuffer_->assign(value);
}
inline void Communication::set_messagebuffer(const void* value, size_t size) {
  set_has_messagebuffer();
  if (messagebuffer_ == &::google::protobuf::internal::kEmptyString) {
    messagebuffer_ = new ::std::string;
  }
  messagebuffer_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Communication::mutable_messagebuffer() {
  set_has_messagebuffer();
  if (messagebuffer_ == &::google::protobuf::internal::kEmptyString) {
    messagebuffer_ = new ::std::string;
  }
  return messagebuffer_;
}
inline ::std::string* Communication::release_messagebuffer() {
  clear_has_messagebuffer();
  if (messagebuffer_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = messagebuffer_;
    messagebuffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Communication::set_allocated_messagebuffer(::std::string* messagebuffer) {
  if (messagebuffer_ != &::google::protobuf::internal::kEmptyString) {
    delete messagebuffer_;
  }
  if (messagebuffer) {
    set_has_messagebuffer();
    messagebuffer_ = messagebuffer;
  } else {
    clear_has_messagebuffer();
    messagebuffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Positioninfo

// optional uint32 userid = 1;
inline bool Positioninfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Positioninfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Positioninfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Positioninfo::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 Positioninfo::userid() const {
  return userid_;
}
inline void Positioninfo::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// optional uint32 encryption = 2;
inline bool Positioninfo::has_encryption() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Positioninfo::set_has_encryption() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Positioninfo::clear_has_encryption() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Positioninfo::clear_encryption() {
  encryption_ = 0u;
  clear_has_encryption();
}
inline ::google::protobuf::uint32 Positioninfo::encryption() const {
  return encryption_;
}
inline void Positioninfo::set_encryption(::google::protobuf::uint32 value) {
  set_has_encryption();
  encryption_ = value;
}

// optional uint32 accuracy = 3;
inline bool Positioninfo::has_accuracy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Positioninfo::set_has_accuracy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Positioninfo::clear_has_accuracy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Positioninfo::clear_accuracy() {
  accuracy_ = 0u;
  clear_has_accuracy();
}
inline ::google::protobuf::uint32 Positioninfo::accuracy() const {
  return accuracy_;
}
inline void Positioninfo::set_accuracy(::google::protobuf::uint32 value) {
  set_has_accuracy();
  accuracy_ = value;
}

// optional uint32 emergencypostion = 4;
inline bool Positioninfo::has_emergencypostion() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Positioninfo::set_has_emergencypostion() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Positioninfo::clear_has_emergencypostion() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Positioninfo::clear_emergencypostion() {
  emergencypostion_ = 0u;
  clear_has_emergencypostion();
}
inline ::google::protobuf::uint32 Positioninfo::emergencypostion() const {
  return emergencypostion_;
}
inline void Positioninfo::set_emergencypostion(::google::protobuf::uint32 value) {
  set_has_emergencypostion();
  emergencypostion_ = value;
}

// optional uint32 multivaluesolution = 5;
inline bool Positioninfo::has_multivaluesolution() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Positioninfo::set_has_multivaluesolution() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Positioninfo::clear_has_multivaluesolution() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Positioninfo::clear_multivaluesolution() {
  multivaluesolution_ = 0u;
  clear_has_multivaluesolution();
}
inline ::google::protobuf::uint32 Positioninfo::multivaluesolution() const {
  return multivaluesolution_;
}
inline void Positioninfo::set_multivaluesolution(::google::protobuf::uint32 value) {
  set_has_multivaluesolution();
  multivaluesolution_ = value;
}

// optional bytes key = 6;
inline bool Positioninfo::has_key() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Positioninfo::set_has_key() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Positioninfo::clear_has_key() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Positioninfo::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& Positioninfo::key() const {
  return *key_;
}
inline void Positioninfo::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void Positioninfo::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void Positioninfo::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Positioninfo::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* Positioninfo::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Positioninfo::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 applaytime_hour = 7;
inline bool Positioninfo::has_applaytime_hour() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Positioninfo::set_has_applaytime_hour() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Positioninfo::clear_has_applaytime_hour() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Positioninfo::clear_applaytime_hour() {
  applaytime_hour_ = 0u;
  clear_has_applaytime_hour();
}
inline ::google::protobuf::uint32 Positioninfo::applaytime_hour() const {
  return applaytime_hour_;
}
inline void Positioninfo::set_applaytime_hour(::google::protobuf::uint32 value) {
  set_has_applaytime_hour();
  applaytime_hour_ = value;
}

// optional uint32 applaytime_minute = 8;
inline bool Positioninfo::has_applaytime_minute() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Positioninfo::set_has_applaytime_minute() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Positioninfo::clear_has_applaytime_minute() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Positioninfo::clear_applaytime_minute() {
  applaytime_minute_ = 0u;
  clear_has_applaytime_minute();
}
inline ::google::protobuf::uint32 Positioninfo::applaytime_minute() const {
  return applaytime_minute_;
}
inline void Positioninfo::set_applaytime_minute(::google::protobuf::uint32 value) {
  set_has_applaytime_minute();
  applaytime_minute_ = value;
}

// optional uint32 applaytime_second = 9;
inline bool Positioninfo::has_applaytime_second() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Positioninfo::set_has_applaytime_second() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Positioninfo::clear_has_applaytime_second() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Positioninfo::clear_applaytime_second() {
  applaytime_second_ = 0u;
  clear_has_applaytime_second();
}
inline ::google::protobuf::uint32 Positioninfo::applaytime_second() const {
  return applaytime_second_;
}
inline void Positioninfo::set_applaytime_second(::google::protobuf::uint32 value) {
  set_has_applaytime_second();
  applaytime_second_ = value;
}

// optional uint32 applaytime_tenths = 10;
inline bool Positioninfo::has_applaytime_tenths() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Positioninfo::set_has_applaytime_tenths() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Positioninfo::clear_has_applaytime_tenths() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Positioninfo::clear_applaytime_tenths() {
  applaytime_tenths_ = 0u;
  clear_has_applaytime_tenths();
}
inline ::google::protobuf::uint32 Positioninfo::applaytime_tenths() const {
  return applaytime_tenths_;
}
inline void Positioninfo::set_applaytime_tenths(::google::protobuf::uint32 value) {
  set_has_applaytime_tenths();
  applaytime_tenths_ = value;
}

// optional uint32 longitude_degree = 11;
inline bool Positioninfo::has_longitude_degree() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Positioninfo::set_has_longitude_degree() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Positioninfo::clear_has_longitude_degree() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Positioninfo::clear_longitude_degree() {
  longitude_degree_ = 0u;
  clear_has_longitude_degree();
}
inline ::google::protobuf::uint32 Positioninfo::longitude_degree() const {
  return longitude_degree_;
}
inline void Positioninfo::set_longitude_degree(::google::protobuf::uint32 value) {
  set_has_longitude_degree();
  longitude_degree_ = value;
}

// optional uint32 longitude_minute = 12;
inline bool Positioninfo::has_longitude_minute() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Positioninfo::set_has_longitude_minute() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Positioninfo::clear_has_longitude_minute() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Positioninfo::clear_longitude_minute() {
  longitude_minute_ = 0u;
  clear_has_longitude_minute();
}
inline ::google::protobuf::uint32 Positioninfo::longitude_minute() const {
  return longitude_minute_;
}
inline void Positioninfo::set_longitude_minute(::google::protobuf::uint32 value) {
  set_has_longitude_minute();
  longitude_minute_ = value;
}

// optional uint32 longitude_second = 13;
inline bool Positioninfo::has_longitude_second() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Positioninfo::set_has_longitude_second() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Positioninfo::clear_has_longitude_second() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Positioninfo::clear_longitude_second() {
  longitude_second_ = 0u;
  clear_has_longitude_second();
}
inline ::google::protobuf::uint32 Positioninfo::longitude_second() const {
  return longitude_second_;
}
inline void Positioninfo::set_longitude_second(::google::protobuf::uint32 value) {
  set_has_longitude_second();
  longitude_second_ = value;
}

// optional uint32 longitude_tenths = 14;
inline bool Positioninfo::has_longitude_tenths() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Positioninfo::set_has_longitude_tenths() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Positioninfo::clear_has_longitude_tenths() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Positioninfo::clear_longitude_tenths() {
  longitude_tenths_ = 0u;
  clear_has_longitude_tenths();
}
inline ::google::protobuf::uint32 Positioninfo::longitude_tenths() const {
  return longitude_tenths_;
}
inline void Positioninfo::set_longitude_tenths(::google::protobuf::uint32 value) {
  set_has_longitude_tenths();
  longitude_tenths_ = value;
}

// optional uint32 latitude_degree = 15;
inline bool Positioninfo::has_latitude_degree() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Positioninfo::set_has_latitude_degree() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Positioninfo::clear_has_latitude_degree() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Positioninfo::clear_latitude_degree() {
  latitude_degree_ = 0u;
  clear_has_latitude_degree();
}
inline ::google::protobuf::uint32 Positioninfo::latitude_degree() const {
  return latitude_degree_;
}
inline void Positioninfo::set_latitude_degree(::google::protobuf::uint32 value) {
  set_has_latitude_degree();
  latitude_degree_ = value;
}

// optional uint32 latitude_minute = 16;
inline bool Positioninfo::has_latitude_minute() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Positioninfo::set_has_latitude_minute() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Positioninfo::clear_has_latitude_minute() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Positioninfo::clear_latitude_minute() {
  latitude_minute_ = 0u;
  clear_has_latitude_minute();
}
inline ::google::protobuf::uint32 Positioninfo::latitude_minute() const {
  return latitude_minute_;
}
inline void Positioninfo::set_latitude_minute(::google::protobuf::uint32 value) {
  set_has_latitude_minute();
  latitude_minute_ = value;
}

// optional uint32 latitude_second = 17;
inline bool Positioninfo::has_latitude_second() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Positioninfo::set_has_latitude_second() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Positioninfo::clear_has_latitude_second() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Positioninfo::clear_latitude_second() {
  latitude_second_ = 0u;
  clear_has_latitude_second();
}
inline ::google::protobuf::uint32 Positioninfo::latitude_second() const {
  return latitude_second_;
}
inline void Positioninfo::set_latitude_second(::google::protobuf::uint32 value) {
  set_has_latitude_second();
  latitude_second_ = value;
}

// optional uint32 latitude_tenths = 18;
inline bool Positioninfo::has_latitude_tenths() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Positioninfo::set_has_latitude_tenths() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Positioninfo::clear_has_latitude_tenths() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Positioninfo::clear_latitude_tenths() {
  latitude_tenths_ = 0u;
  clear_has_latitude_tenths();
}
inline ::google::protobuf::uint32 Positioninfo::latitude_tenths() const {
  return latitude_tenths_;
}
inline void Positioninfo::set_latitude_tenths(::google::protobuf::uint32 value) {
  set_has_latitude_tenths();
  latitude_tenths_ = value;
}

// optional int32 geodeticheight = 19;
inline bool Positioninfo::has_geodeticheight() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Positioninfo::set_has_geodeticheight() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Positioninfo::clear_has_geodeticheight() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Positioninfo::clear_geodeticheight() {
  geodeticheight_ = 0;
  clear_has_geodeticheight();
}
inline ::google::protobuf::int32 Positioninfo::geodeticheight() const {
  return geodeticheight_;
}
inline void Positioninfo::set_geodeticheight(::google::protobuf::int32 value) {
  set_has_geodeticheight();
  geodeticheight_ = value;
}

// optional int32 detlaelevation = 20;
inline bool Positioninfo::has_detlaelevation() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Positioninfo::set_has_detlaelevation() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Positioninfo::clear_has_detlaelevation() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Positioninfo::clear_detlaelevation() {
  detlaelevation_ = 0;
  clear_has_detlaelevation();
}
inline ::google::protobuf::int32 Positioninfo::detlaelevation() const {
  return detlaelevation_;
}
inline void Positioninfo::set_detlaelevation(::google::protobuf::int32 value) {
  set_has_detlaelevation();
  detlaelevation_ = value;
}

// -------------------------------------------------------------------

// Communicationreceipt

// optional uint32 sendaddr = 1;
inline bool Communicationreceipt::has_sendaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Communicationreceipt::set_has_sendaddr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Communicationreceipt::clear_has_sendaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Communicationreceipt::clear_sendaddr() {
  sendaddr_ = 0u;
  clear_has_sendaddr();
}
inline ::google::protobuf::uint32 Communicationreceipt::sendaddr() const {
  return sendaddr_;
}
inline void Communicationreceipt::set_sendaddr(::google::protobuf::uint32 value) {
  set_has_sendaddr();
  sendaddr_ = value;
}

// optional uint32 recvaddr = 2;
inline bool Communicationreceipt::has_recvaddr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Communicationreceipt::set_has_recvaddr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Communicationreceipt::clear_has_recvaddr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Communicationreceipt::clear_recvaddr() {
  recvaddr_ = 0u;
  clear_has_recvaddr();
}
inline ::google::protobuf::uint32 Communicationreceipt::recvaddr() const {
  return recvaddr_;
}
inline void Communicationreceipt::set_recvaddr(::google::protobuf::uint32 value) {
  set_has_recvaddr();
  recvaddr_ = value;
}

// optional uint32 receipttime_hour = 3;
inline bool Communicationreceipt::has_receipttime_hour() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Communicationreceipt::set_has_receipttime_hour() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Communicationreceipt::clear_has_receipttime_hour() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Communicationreceipt::clear_receipttime_hour() {
  receipttime_hour_ = 0u;
  clear_has_receipttime_hour();
}
inline ::google::protobuf::uint32 Communicationreceipt::receipttime_hour() const {
  return receipttime_hour_;
}
inline void Communicationreceipt::set_receipttime_hour(::google::protobuf::uint32 value) {
  set_has_receipttime_hour();
  receipttime_hour_ = value;
}

// optional uint32 receipttime_minute = 4;
inline bool Communicationreceipt::has_receipttime_minute() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Communicationreceipt::set_has_receipttime_minute() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Communicationreceipt::clear_has_receipttime_minute() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Communicationreceipt::clear_receipttime_minute() {
  receipttime_minute_ = 0u;
  clear_has_receipttime_minute();
}
inline ::google::protobuf::uint32 Communicationreceipt::receipttime_minute() const {
  return receipttime_minute_;
}
inline void Communicationreceipt::set_receipttime_minute(::google::protobuf::uint32 value) {
  set_has_receipttime_minute();
  receipttime_minute_ = value;
}

// optional uint32 receipttime_second = 5;
inline bool Communicationreceipt::has_receipttime_second() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Communicationreceipt::set_has_receipttime_second() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Communicationreceipt::clear_has_receipttime_second() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Communicationreceipt::clear_receipttime_second() {
  receipttime_second_ = 0u;
  clear_has_receipttime_second();
}
inline ::google::protobuf::uint32 Communicationreceipt::receipttime_second() const {
  return receipttime_second_;
}
inline void Communicationreceipt::set_receipttime_second(::google::protobuf::uint32 value) {
  set_has_receipttime_second();
  receipttime_second_ = value;
}

// -------------------------------------------------------------------

// Beidoumessage

// optional uint32 messagetype = 1;
inline bool Beidoumessage::has_messagetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Beidoumessage::set_has_messagetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Beidoumessage::clear_has_messagetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Beidoumessage::clear_messagetype() {
  messagetype_ = 0u;
  clear_has_messagetype();
}
inline ::google::protobuf::uint32 Beidoumessage::messagetype() const {
  return messagetype_;
}
inline void Beidoumessage::set_messagetype(::google::protobuf::uint32 value) {
  set_has_messagetype();
  messagetype_ = value;
}

// optional .Communication commuincation = 2;
inline bool Beidoumessage::has_commuincation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Beidoumessage::set_has_commuincation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Beidoumessage::clear_has_commuincation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Beidoumessage::clear_commuincation() {
  if (commuincation_ != NULL) commuincation_->::Communication::Clear();
  clear_has_commuincation();
}
inline const ::Communication& Beidoumessage::commuincation() const {
  return commuincation_ != NULL ? *commuincation_ : *default_instance_->commuincation_;
}
inline ::Communication* Beidoumessage::mutable_commuincation() {
  set_has_commuincation();
  if (commuincation_ == NULL) commuincation_ = new ::Communication;
  return commuincation_;
}
inline ::Communication* Beidoumessage::release_commuincation() {
  clear_has_commuincation();
  ::Communication* temp = commuincation_;
  commuincation_ = NULL;
  return temp;
}
inline void Beidoumessage::set_allocated_commuincation(::Communication* commuincation) {
  delete commuincation_;
  commuincation_ = commuincation;
  if (commuincation) {
    set_has_commuincation();
  } else {
    clear_has_commuincation();
  }
}

// optional .Communicationreceipt communicationreceipt = 3;
inline bool Beidoumessage::has_communicationreceipt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Beidoumessage::set_has_communicationreceipt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Beidoumessage::clear_has_communicationreceipt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Beidoumessage::clear_communicationreceipt() {
  if (communicationreceipt_ != NULL) communicationreceipt_->::Communicationreceipt::Clear();
  clear_has_communicationreceipt();
}
inline const ::Communicationreceipt& Beidoumessage::communicationreceipt() const {
  return communicationreceipt_ != NULL ? *communicationreceipt_ : *default_instance_->communicationreceipt_;
}
inline ::Communicationreceipt* Beidoumessage::mutable_communicationreceipt() {
  set_has_communicationreceipt();
  if (communicationreceipt_ == NULL) communicationreceipt_ = new ::Communicationreceipt;
  return communicationreceipt_;
}
inline ::Communicationreceipt* Beidoumessage::release_communicationreceipt() {
  clear_has_communicationreceipt();
  ::Communicationreceipt* temp = communicationreceipt_;
  communicationreceipt_ = NULL;
  return temp;
}
inline void Beidoumessage::set_allocated_communicationreceipt(::Communicationreceipt* communicationreceipt) {
  delete communicationreceipt_;
  communicationreceipt_ = communicationreceipt;
  if (communicationreceipt) {
    set_has_communicationreceipt();
  } else {
    clear_has_communicationreceipt();
  }
}

// optional .Positioninfo positioninfo = 4;
inline bool Beidoumessage::has_positioninfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Beidoumessage::set_has_positioninfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Beidoumessage::clear_has_positioninfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Beidoumessage::clear_positioninfo() {
  if (positioninfo_ != NULL) positioninfo_->::Positioninfo::Clear();
  clear_has_positioninfo();
}
inline const ::Positioninfo& Beidoumessage::positioninfo() const {
  return positioninfo_ != NULL ? *positioninfo_ : *default_instance_->positioninfo_;
}
inline ::Positioninfo* Beidoumessage::mutable_positioninfo() {
  set_has_positioninfo();
  if (positioninfo_ == NULL) positioninfo_ = new ::Positioninfo;
  return positioninfo_;
}
inline ::Positioninfo* Beidoumessage::release_positioninfo() {
  clear_has_positioninfo();
  ::Positioninfo* temp = positioninfo_;
  positioninfo_ = NULL;
  return temp;
}
inline void Beidoumessage::set_allocated_positioninfo(::Positioninfo* positioninfo) {
  delete positioninfo_;
  positioninfo_ = positioninfo;
  if (positioninfo) {
    set_has_positioninfo();
  } else {
    clear_has_positioninfo();
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_beidoumessage_2eproto__INCLUDED
