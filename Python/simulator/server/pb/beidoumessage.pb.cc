// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: beidoumessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "beidoumessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Communication_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Communication_reflection_ = NULL;
const ::google::protobuf::Descriptor* Positioninfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Positioninfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Communicationreceipt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Communicationreceipt_reflection_ = NULL;
const ::google::protobuf::Descriptor* Beidoumessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Beidoumessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_beidoumessage_2eproto() {
  protobuf_AddDesc_beidoumessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "beidoumessage.proto");
  GOOGLE_CHECK(file != NULL);
  Communication_descriptor_ = file->message_type(0);
  static const int Communication_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communication, messageform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communication, messagecategory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communication, encryption_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communication, sendaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communication, recvaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communication, sendtime_hour_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communication, sendtime_minute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communication, sendtime_second_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communication, messagelength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communication, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communication, messagebuffer_),
  };
  Communication_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Communication_descriptor_,
      Communication::default_instance_,
      Communication_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communication, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communication, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Communication));
  Positioninfo_descriptor_ = file->message_type(1);
  static const int Positioninfo_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, encryption_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, accuracy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, emergencypostion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, multivaluesolution_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, applaytime_hour_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, applaytime_minute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, applaytime_second_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, applaytime_tenths_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, longitude_degree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, longitude_minute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, longitude_second_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, longitude_tenths_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, latitude_degree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, latitude_minute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, latitude_second_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, latitude_tenths_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, geodeticheight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, detlaelevation_),
  };
  Positioninfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Positioninfo_descriptor_,
      Positioninfo::default_instance_,
      Positioninfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Positioninfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Positioninfo));
  Communicationreceipt_descriptor_ = file->message_type(2);
  static const int Communicationreceipt_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communicationreceipt, sendaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communicationreceipt, recvaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communicationreceipt, receipttime_hour_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communicationreceipt, receipttime_minute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communicationreceipt, receipttime_second_),
  };
  Communicationreceipt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Communicationreceipt_descriptor_,
      Communicationreceipt::default_instance_,
      Communicationreceipt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communicationreceipt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Communicationreceipt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Communicationreceipt));
  Beidoumessage_descriptor_ = file->message_type(3);
  static const int Beidoumessage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beidoumessage, messagetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beidoumessage, commuincation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beidoumessage, communicationreceipt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beidoumessage, positioninfo_),
  };
  Beidoumessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Beidoumessage_descriptor_,
      Beidoumessage::default_instance_,
      Beidoumessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beidoumessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beidoumessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Beidoumessage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_beidoumessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Communication_descriptor_, &Communication::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Positioninfo_descriptor_, &Positioninfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Communicationreceipt_descriptor_, &Communicationreceipt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Beidoumessage_descriptor_, &Beidoumessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_beidoumessage_2eproto() {
  delete Communication::default_instance_;
  delete Communication_reflection_;
  delete Positioninfo::default_instance_;
  delete Positioninfo_reflection_;
  delete Communicationreceipt::default_instance_;
  delete Communicationreceipt_reflection_;
  delete Beidoumessage::default_instance_;
  delete Beidoumessage_reflection_;
}

void protobuf_AddDesc_beidoumessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023beidoumessage.proto\"\371\001\n\rCommunication\022"
    "\023\n\013messageform\030\001 \001(\r\022\027\n\017messagecategory\030"
    "\002 \001(\r\022\022\n\nencryption\030\003 \001(\r\022\020\n\010sendaddr\030\004 "
    "\001(\r\022\020\n\010recvaddr\030\005 \001(\r\022\025\n\rsendtime_hour\030\006"
    " \001(\r\022\027\n\017sendtime_minute\030\007 \001(\r\022\027\n\017sendtim"
    "e_second\030\010 \001(\r\022\025\n\rmessagelength\030\t \001(\r\022\013\n"
    "\003key\030\n \001(\014\022\025\n\rmessagebuffer\030\013 \001(\014\"\355\003\n\014Po"
    "sitioninfo\022\016\n\006userid\030\001 \001(\r\022\022\n\nencryption"
    "\030\002 \001(\r\022\020\n\010accuracy\030\003 \001(\r\022\030\n\020emergencypos"
    "tion\030\004 \001(\r\022\032\n\022multivaluesolution\030\005 \001(\r\022\013"
    "\n\003key\030\006 \001(\014\022\027\n\017applaytime_hour\030\007 \001(\r\022\031\n\021"
    "applaytime_minute\030\010 \001(\r\022\031\n\021applaytime_se"
    "cond\030\t \001(\r\022\031\n\021applaytime_tenths\030\n \001(\r\022\030\n"
    "\020longitude_degree\030\013 \001(\r\022\030\n\020longitude_min"
    "ute\030\014 \001(\r\022\030\n\020longitude_second\030\r \001(\r\022\030\n\020l"
    "ongitude_tenths\030\016 \001(\r\022\027\n\017latitude_degree"
    "\030\017 \001(\r\022\027\n\017latitude_minute\030\020 \001(\r\022\027\n\017latit"
    "ude_second\030\021 \001(\r\022\027\n\017latitude_tenths\030\022 \001("
    "\r\022\026\n\016geodeticheight\030\023 \001(\005\022\026\n\016detlaelevat"
    "ion\030\024 \001(\005\"\214\001\n\024Communicationreceipt\022\020\n\010se"
    "ndaddr\030\001 \001(\r\022\020\n\010recvaddr\030\002 \001(\r\022\030\n\020receip"
    "ttime_hour\030\003 \001(\r\022\032\n\022receipttime_minute\030\004"
    " \001(\r\022\032\n\022receipttime_second\030\005 \001(\r\"\245\001\n\rBei"
    "doumessage\022\023\n\013messagetype\030\001 \001(\r\022%\n\rcommu"
    "incation\030\002 \001(\0132\016.Communication\0223\n\024commun"
    "icationreceipt\030\003 \001(\0132\025.Communicationrece"
    "ipt\022#\n\014positioninfo\030\004 \001(\0132\r.Positioninfo", 1080);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "beidoumessage.proto", &protobuf_RegisterTypes);
  Communication::default_instance_ = new Communication();
  Positioninfo::default_instance_ = new Positioninfo();
  Communicationreceipt::default_instance_ = new Communicationreceipt();
  Beidoumessage::default_instance_ = new Beidoumessage();
  Communication::default_instance_->InitAsDefaultInstance();
  Positioninfo::default_instance_->InitAsDefaultInstance();
  Communicationreceipt::default_instance_->InitAsDefaultInstance();
  Beidoumessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_beidoumessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_beidoumessage_2eproto {
  StaticDescriptorInitializer_beidoumessage_2eproto() {
    protobuf_AddDesc_beidoumessage_2eproto();
  }
} static_descriptor_initializer_beidoumessage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Communication::kMessageformFieldNumber;
const int Communication::kMessagecategoryFieldNumber;
const int Communication::kEncryptionFieldNumber;
const int Communication::kSendaddrFieldNumber;
const int Communication::kRecvaddrFieldNumber;
const int Communication::kSendtimeHourFieldNumber;
const int Communication::kSendtimeMinuteFieldNumber;
const int Communication::kSendtimeSecondFieldNumber;
const int Communication::kMessagelengthFieldNumber;
const int Communication::kKeyFieldNumber;
const int Communication::kMessagebufferFieldNumber;
#endif  // !_MSC_VER

Communication::Communication()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Communication::InitAsDefaultInstance() {
}

Communication::Communication(const Communication& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Communication::SharedCtor() {
  _cached_size_ = 0;
  messageform_ = 0u;
  messagecategory_ = 0u;
  encryption_ = 0u;
  sendaddr_ = 0u;
  recvaddr_ = 0u;
  sendtime_hour_ = 0u;
  sendtime_minute_ = 0u;
  sendtime_second_ = 0u;
  messagelength_ = 0u;
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  messagebuffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Communication::~Communication() {
  SharedDtor();
}

void Communication::SharedDtor() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (messagebuffer_ != &::google::protobuf::internal::kEmptyString) {
    delete messagebuffer_;
  }
  if (this != default_instance_) {
  }
}

void Communication::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Communication::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Communication_descriptor_;
}

const Communication& Communication::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_beidoumessage_2eproto();
  return *default_instance_;
}

Communication* Communication::default_instance_ = NULL;

Communication* Communication::New() const {
  return new Communication;
}

void Communication::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    messageform_ = 0u;
    messagecategory_ = 0u;
    encryption_ = 0u;
    sendaddr_ = 0u;
    recvaddr_ = 0u;
    sendtime_hour_ = 0u;
    sendtime_minute_ = 0u;
    sendtime_second_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    messagelength_ = 0u;
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::kEmptyString) {
        key_->clear();
      }
    }
    if (has_messagebuffer()) {
      if (messagebuffer_ != &::google::protobuf::internal::kEmptyString) {
        messagebuffer_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Communication::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 messageform = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &messageform_)));
          set_has_messageform();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_messagecategory;
        break;
      }

      // optional uint32 messagecategory = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_messagecategory:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &messagecategory_)));
          set_has_messagecategory();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_encryption;
        break;
      }

      // optional uint32 encryption = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_encryption:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encryption_)));
          set_has_encryption();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_sendaddr;
        break;
      }

      // optional uint32 sendaddr = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sendaddr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sendaddr_)));
          set_has_sendaddr();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_recvaddr;
        break;
      }

      // optional uint32 recvaddr = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recvaddr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recvaddr_)));
          set_has_recvaddr();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_sendtime_hour;
        break;
      }

      // optional uint32 sendtime_hour = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sendtime_hour:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sendtime_hour_)));
          set_has_sendtime_hour();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_sendtime_minute;
        break;
      }

      // optional uint32 sendtime_minute = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sendtime_minute:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sendtime_minute_)));
          set_has_sendtime_minute();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_sendtime_second;
        break;
      }

      // optional uint32 sendtime_second = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sendtime_second:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sendtime_second_)));
          set_has_sendtime_second();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_messagelength;
        break;
      }

      // optional uint32 messagelength = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_messagelength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &messagelength_)));
          set_has_messagelength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_key;
        break;
      }

      // optional bytes key = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_messagebuffer;
        break;
      }

      // optional bytes messagebuffer = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_messagebuffer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_messagebuffer()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Communication::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 messageform = 1;
  if (has_messageform()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->messageform(), output);
  }

  // optional uint32 messagecategory = 2;
  if (has_messagecategory()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->messagecategory(), output);
  }

  // optional uint32 encryption = 3;
  if (has_encryption()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->encryption(), output);
  }

  // optional uint32 sendaddr = 4;
  if (has_sendaddr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->sendaddr(), output);
  }

  // optional uint32 recvaddr = 5;
  if (has_recvaddr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->recvaddr(), output);
  }

  // optional uint32 sendtime_hour = 6;
  if (has_sendtime_hour()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->sendtime_hour(), output);
  }

  // optional uint32 sendtime_minute = 7;
  if (has_sendtime_minute()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->sendtime_minute(), output);
  }

  // optional uint32 sendtime_second = 8;
  if (has_sendtime_second()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->sendtime_second(), output);
  }

  // optional uint32 messagelength = 9;
  if (has_messagelength()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->messagelength(), output);
  }

  // optional bytes key = 10;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      10, this->key(), output);
  }

  // optional bytes messagebuffer = 11;
  if (has_messagebuffer()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      11, this->messagebuffer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Communication::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 messageform = 1;
  if (has_messageform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->messageform(), target);
  }

  // optional uint32 messagecategory = 2;
  if (has_messagecategory()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->messagecategory(), target);
  }

  // optional uint32 encryption = 3;
  if (has_encryption()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->encryption(), target);
  }

  // optional uint32 sendaddr = 4;
  if (has_sendaddr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->sendaddr(), target);
  }

  // optional uint32 recvaddr = 5;
  if (has_recvaddr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->recvaddr(), target);
  }

  // optional uint32 sendtime_hour = 6;
  if (has_sendtime_hour()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->sendtime_hour(), target);
  }

  // optional uint32 sendtime_minute = 7;
  if (has_sendtime_minute()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->sendtime_minute(), target);
  }

  // optional uint32 sendtime_second = 8;
  if (has_sendtime_second()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->sendtime_second(), target);
  }

  // optional uint32 messagelength = 9;
  if (has_messagelength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->messagelength(), target);
  }

  // optional bytes key = 10;
  if (has_key()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->key(), target);
  }

  // optional bytes messagebuffer = 11;
  if (has_messagebuffer()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->messagebuffer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Communication::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 messageform = 1;
    if (has_messageform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->messageform());
    }

    // optional uint32 messagecategory = 2;
    if (has_messagecategory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->messagecategory());
    }

    // optional uint32 encryption = 3;
    if (has_encryption()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->encryption());
    }

    // optional uint32 sendaddr = 4;
    if (has_sendaddr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sendaddr());
    }

    // optional uint32 recvaddr = 5;
    if (has_recvaddr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recvaddr());
    }

    // optional uint32 sendtime_hour = 6;
    if (has_sendtime_hour()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sendtime_hour());
    }

    // optional uint32 sendtime_minute = 7;
    if (has_sendtime_minute()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sendtime_minute());
    }

    // optional uint32 sendtime_second = 8;
    if (has_sendtime_second()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sendtime_second());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 messagelength = 9;
    if (has_messagelength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->messagelength());
    }

    // optional bytes key = 10;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // optional bytes messagebuffer = 11;
    if (has_messagebuffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->messagebuffer());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Communication::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Communication* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Communication*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Communication::MergeFrom(const Communication& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_messageform()) {
      set_messageform(from.messageform());
    }
    if (from.has_messagecategory()) {
      set_messagecategory(from.messagecategory());
    }
    if (from.has_encryption()) {
      set_encryption(from.encryption());
    }
    if (from.has_sendaddr()) {
      set_sendaddr(from.sendaddr());
    }
    if (from.has_recvaddr()) {
      set_recvaddr(from.recvaddr());
    }
    if (from.has_sendtime_hour()) {
      set_sendtime_hour(from.sendtime_hour());
    }
    if (from.has_sendtime_minute()) {
      set_sendtime_minute(from.sendtime_minute());
    }
    if (from.has_sendtime_second()) {
      set_sendtime_second(from.sendtime_second());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_messagelength()) {
      set_messagelength(from.messagelength());
    }
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_messagebuffer()) {
      set_messagebuffer(from.messagebuffer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Communication::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Communication::CopyFrom(const Communication& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Communication::IsInitialized() const {

  return true;
}

void Communication::Swap(Communication* other) {
  if (other != this) {
    std::swap(messageform_, other->messageform_);
    std::swap(messagecategory_, other->messagecategory_);
    std::swap(encryption_, other->encryption_);
    std::swap(sendaddr_, other->sendaddr_);
    std::swap(recvaddr_, other->recvaddr_);
    std::swap(sendtime_hour_, other->sendtime_hour_);
    std::swap(sendtime_minute_, other->sendtime_minute_);
    std::swap(sendtime_second_, other->sendtime_second_);
    std::swap(messagelength_, other->messagelength_);
    std::swap(key_, other->key_);
    std::swap(messagebuffer_, other->messagebuffer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Communication::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Communication_descriptor_;
  metadata.reflection = Communication_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Positioninfo::kUseridFieldNumber;
const int Positioninfo::kEncryptionFieldNumber;
const int Positioninfo::kAccuracyFieldNumber;
const int Positioninfo::kEmergencypostionFieldNumber;
const int Positioninfo::kMultivaluesolutionFieldNumber;
const int Positioninfo::kKeyFieldNumber;
const int Positioninfo::kApplaytimeHourFieldNumber;
const int Positioninfo::kApplaytimeMinuteFieldNumber;
const int Positioninfo::kApplaytimeSecondFieldNumber;
const int Positioninfo::kApplaytimeTenthsFieldNumber;
const int Positioninfo::kLongitudeDegreeFieldNumber;
const int Positioninfo::kLongitudeMinuteFieldNumber;
const int Positioninfo::kLongitudeSecondFieldNumber;
const int Positioninfo::kLongitudeTenthsFieldNumber;
const int Positioninfo::kLatitudeDegreeFieldNumber;
const int Positioninfo::kLatitudeMinuteFieldNumber;
const int Positioninfo::kLatitudeSecondFieldNumber;
const int Positioninfo::kLatitudeTenthsFieldNumber;
const int Positioninfo::kGeodeticheightFieldNumber;
const int Positioninfo::kDetlaelevationFieldNumber;
#endif  // !_MSC_VER

Positioninfo::Positioninfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Positioninfo::InitAsDefaultInstance() {
}

Positioninfo::Positioninfo(const Positioninfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Positioninfo::SharedCtor() {
  _cached_size_ = 0;
  userid_ = 0u;
  encryption_ = 0u;
  accuracy_ = 0u;
  emergencypostion_ = 0u;
  multivaluesolution_ = 0u;
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  applaytime_hour_ = 0u;
  applaytime_minute_ = 0u;
  applaytime_second_ = 0u;
  applaytime_tenths_ = 0u;
  longitude_degree_ = 0u;
  longitude_minute_ = 0u;
  longitude_second_ = 0u;
  longitude_tenths_ = 0u;
  latitude_degree_ = 0u;
  latitude_minute_ = 0u;
  latitude_second_ = 0u;
  latitude_tenths_ = 0u;
  geodeticheight_ = 0;
  detlaelevation_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Positioninfo::~Positioninfo() {
  SharedDtor();
}

void Positioninfo::SharedDtor() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (this != default_instance_) {
  }
}

void Positioninfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Positioninfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Positioninfo_descriptor_;
}

const Positioninfo& Positioninfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_beidoumessage_2eproto();
  return *default_instance_;
}

Positioninfo* Positioninfo::default_instance_ = NULL;

Positioninfo* Positioninfo::New() const {
  return new Positioninfo;
}

void Positioninfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    userid_ = 0u;
    encryption_ = 0u;
    accuracy_ = 0u;
    emergencypostion_ = 0u;
    multivaluesolution_ = 0u;
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::kEmptyString) {
        key_->clear();
      }
    }
    applaytime_hour_ = 0u;
    applaytime_minute_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    applaytime_second_ = 0u;
    applaytime_tenths_ = 0u;
    longitude_degree_ = 0u;
    longitude_minute_ = 0u;
    longitude_second_ = 0u;
    longitude_tenths_ = 0u;
    latitude_degree_ = 0u;
    latitude_minute_ = 0u;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    latitude_second_ = 0u;
    latitude_tenths_ = 0u;
    geodeticheight_ = 0;
    detlaelevation_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Positioninfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_encryption;
        break;
      }

      // optional uint32 encryption = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_encryption:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encryption_)));
          set_has_encryption();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_accuracy;
        break;
      }

      // optional uint32 accuracy = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_accuracy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accuracy_)));
          set_has_accuracy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_emergencypostion;
        break;
      }

      // optional uint32 emergencypostion = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_emergencypostion:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &emergencypostion_)));
          set_has_emergencypostion();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_multivaluesolution;
        break;
      }

      // optional uint32 multivaluesolution = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_multivaluesolution:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &multivaluesolution_)));
          set_has_multivaluesolution();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_key;
        break;
      }

      // optional bytes key = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_applaytime_hour;
        break;
      }

      // optional uint32 applaytime_hour = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_applaytime_hour:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &applaytime_hour_)));
          set_has_applaytime_hour();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_applaytime_minute;
        break;
      }

      // optional uint32 applaytime_minute = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_applaytime_minute:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &applaytime_minute_)));
          set_has_applaytime_minute();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_applaytime_second;
        break;
      }

      // optional uint32 applaytime_second = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_applaytime_second:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &applaytime_second_)));
          set_has_applaytime_second();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_applaytime_tenths;
        break;
      }

      // optional uint32 applaytime_tenths = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_applaytime_tenths:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &applaytime_tenths_)));
          set_has_applaytime_tenths();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_longitude_degree;
        break;
      }

      // optional uint32 longitude_degree = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_longitude_degree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &longitude_degree_)));
          set_has_longitude_degree();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_longitude_minute;
        break;
      }

      // optional uint32 longitude_minute = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_longitude_minute:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &longitude_minute_)));
          set_has_longitude_minute();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_longitude_second;
        break;
      }

      // optional uint32 longitude_second = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_longitude_second:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &longitude_second_)));
          set_has_longitude_second();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_longitude_tenths;
        break;
      }

      // optional uint32 longitude_tenths = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_longitude_tenths:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &longitude_tenths_)));
          set_has_longitude_tenths();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_latitude_degree;
        break;
      }

      // optional uint32 latitude_degree = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_latitude_degree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &latitude_degree_)));
          set_has_latitude_degree();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_latitude_minute;
        break;
      }

      // optional uint32 latitude_minute = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_latitude_minute:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &latitude_minute_)));
          set_has_latitude_minute();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_latitude_second;
        break;
      }

      // optional uint32 latitude_second = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_latitude_second:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &latitude_second_)));
          set_has_latitude_second();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_latitude_tenths;
        break;
      }

      // optional uint32 latitude_tenths = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_latitude_tenths:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &latitude_tenths_)));
          set_has_latitude_tenths();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_geodeticheight;
        break;
      }

      // optional int32 geodeticheight = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_geodeticheight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &geodeticheight_)));
          set_has_geodeticheight();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_detlaelevation;
        break;
      }

      // optional int32 detlaelevation = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_detlaelevation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &detlaelevation_)));
          set_has_detlaelevation();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Positioninfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 userid = 1;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 encryption = 2;
  if (has_encryption()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->encryption(), output);
  }

  // optional uint32 accuracy = 3;
  if (has_accuracy()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->accuracy(), output);
  }

  // optional uint32 emergencypostion = 4;
  if (has_emergencypostion()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->emergencypostion(), output);
  }

  // optional uint32 multivaluesolution = 5;
  if (has_multivaluesolution()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->multivaluesolution(), output);
  }

  // optional bytes key = 6;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      6, this->key(), output);
  }

  // optional uint32 applaytime_hour = 7;
  if (has_applaytime_hour()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->applaytime_hour(), output);
  }

  // optional uint32 applaytime_minute = 8;
  if (has_applaytime_minute()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->applaytime_minute(), output);
  }

  // optional uint32 applaytime_second = 9;
  if (has_applaytime_second()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->applaytime_second(), output);
  }

  // optional uint32 applaytime_tenths = 10;
  if (has_applaytime_tenths()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->applaytime_tenths(), output);
  }

  // optional uint32 longitude_degree = 11;
  if (has_longitude_degree()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->longitude_degree(), output);
  }

  // optional uint32 longitude_minute = 12;
  if (has_longitude_minute()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->longitude_minute(), output);
  }

  // optional uint32 longitude_second = 13;
  if (has_longitude_second()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->longitude_second(), output);
  }

  // optional uint32 longitude_tenths = 14;
  if (has_longitude_tenths()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->longitude_tenths(), output);
  }

  // optional uint32 latitude_degree = 15;
  if (has_latitude_degree()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->latitude_degree(), output);
  }

  // optional uint32 latitude_minute = 16;
  if (has_latitude_minute()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->latitude_minute(), output);
  }

  // optional uint32 latitude_second = 17;
  if (has_latitude_second()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->latitude_second(), output);
  }

  // optional uint32 latitude_tenths = 18;
  if (has_latitude_tenths()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->latitude_tenths(), output);
  }

  // optional int32 geodeticheight = 19;
  if (has_geodeticheight()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->geodeticheight(), output);
  }

  // optional int32 detlaelevation = 20;
  if (has_detlaelevation()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->detlaelevation(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Positioninfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 userid = 1;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 encryption = 2;
  if (has_encryption()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->encryption(), target);
  }

  // optional uint32 accuracy = 3;
  if (has_accuracy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->accuracy(), target);
  }

  // optional uint32 emergencypostion = 4;
  if (has_emergencypostion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->emergencypostion(), target);
  }

  // optional uint32 multivaluesolution = 5;
  if (has_multivaluesolution()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->multivaluesolution(), target);
  }

  // optional bytes key = 6;
  if (has_key()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->key(), target);
  }

  // optional uint32 applaytime_hour = 7;
  if (has_applaytime_hour()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->applaytime_hour(), target);
  }

  // optional uint32 applaytime_minute = 8;
  if (has_applaytime_minute()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->applaytime_minute(), target);
  }

  // optional uint32 applaytime_second = 9;
  if (has_applaytime_second()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->applaytime_second(), target);
  }

  // optional uint32 applaytime_tenths = 10;
  if (has_applaytime_tenths()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->applaytime_tenths(), target);
  }

  // optional uint32 longitude_degree = 11;
  if (has_longitude_degree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->longitude_degree(), target);
  }

  // optional uint32 longitude_minute = 12;
  if (has_longitude_minute()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->longitude_minute(), target);
  }

  // optional uint32 longitude_second = 13;
  if (has_longitude_second()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->longitude_second(), target);
  }

  // optional uint32 longitude_tenths = 14;
  if (has_longitude_tenths()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->longitude_tenths(), target);
  }

  // optional uint32 latitude_degree = 15;
  if (has_latitude_degree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->latitude_degree(), target);
  }

  // optional uint32 latitude_minute = 16;
  if (has_latitude_minute()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->latitude_minute(), target);
  }

  // optional uint32 latitude_second = 17;
  if (has_latitude_second()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->latitude_second(), target);
  }

  // optional uint32 latitude_tenths = 18;
  if (has_latitude_tenths()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->latitude_tenths(), target);
  }

  // optional int32 geodeticheight = 19;
  if (has_geodeticheight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->geodeticheight(), target);
  }

  // optional int32 detlaelevation = 20;
  if (has_detlaelevation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->detlaelevation(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Positioninfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->userid());
    }

    // optional uint32 encryption = 2;
    if (has_encryption()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->encryption());
    }

    // optional uint32 accuracy = 3;
    if (has_accuracy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accuracy());
    }

    // optional uint32 emergencypostion = 4;
    if (has_emergencypostion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->emergencypostion());
    }

    // optional uint32 multivaluesolution = 5;
    if (has_multivaluesolution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->multivaluesolution());
    }

    // optional bytes key = 6;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // optional uint32 applaytime_hour = 7;
    if (has_applaytime_hour()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->applaytime_hour());
    }

    // optional uint32 applaytime_minute = 8;
    if (has_applaytime_minute()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->applaytime_minute());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 applaytime_second = 9;
    if (has_applaytime_second()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->applaytime_second());
    }

    // optional uint32 applaytime_tenths = 10;
    if (has_applaytime_tenths()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->applaytime_tenths());
    }

    // optional uint32 longitude_degree = 11;
    if (has_longitude_degree()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->longitude_degree());
    }

    // optional uint32 longitude_minute = 12;
    if (has_longitude_minute()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->longitude_minute());
    }

    // optional uint32 longitude_second = 13;
    if (has_longitude_second()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->longitude_second());
    }

    // optional uint32 longitude_tenths = 14;
    if (has_longitude_tenths()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->longitude_tenths());
    }

    // optional uint32 latitude_degree = 15;
    if (has_latitude_degree()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->latitude_degree());
    }

    // optional uint32 latitude_minute = 16;
    if (has_latitude_minute()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->latitude_minute());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional uint32 latitude_second = 17;
    if (has_latitude_second()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->latitude_second());
    }

    // optional uint32 latitude_tenths = 18;
    if (has_latitude_tenths()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->latitude_tenths());
    }

    // optional int32 geodeticheight = 19;
    if (has_geodeticheight()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->geodeticheight());
    }

    // optional int32 detlaelevation = 20;
    if (has_detlaelevation()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->detlaelevation());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Positioninfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Positioninfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Positioninfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Positioninfo::MergeFrom(const Positioninfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_encryption()) {
      set_encryption(from.encryption());
    }
    if (from.has_accuracy()) {
      set_accuracy(from.accuracy());
    }
    if (from.has_emergencypostion()) {
      set_emergencypostion(from.emergencypostion());
    }
    if (from.has_multivaluesolution()) {
      set_multivaluesolution(from.multivaluesolution());
    }
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_applaytime_hour()) {
      set_applaytime_hour(from.applaytime_hour());
    }
    if (from.has_applaytime_minute()) {
      set_applaytime_minute(from.applaytime_minute());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_applaytime_second()) {
      set_applaytime_second(from.applaytime_second());
    }
    if (from.has_applaytime_tenths()) {
      set_applaytime_tenths(from.applaytime_tenths());
    }
    if (from.has_longitude_degree()) {
      set_longitude_degree(from.longitude_degree());
    }
    if (from.has_longitude_minute()) {
      set_longitude_minute(from.longitude_minute());
    }
    if (from.has_longitude_second()) {
      set_longitude_second(from.longitude_second());
    }
    if (from.has_longitude_tenths()) {
      set_longitude_tenths(from.longitude_tenths());
    }
    if (from.has_latitude_degree()) {
      set_latitude_degree(from.latitude_degree());
    }
    if (from.has_latitude_minute()) {
      set_latitude_minute(from.latitude_minute());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_latitude_second()) {
      set_latitude_second(from.latitude_second());
    }
    if (from.has_latitude_tenths()) {
      set_latitude_tenths(from.latitude_tenths());
    }
    if (from.has_geodeticheight()) {
      set_geodeticheight(from.geodeticheight());
    }
    if (from.has_detlaelevation()) {
      set_detlaelevation(from.detlaelevation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Positioninfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Positioninfo::CopyFrom(const Positioninfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Positioninfo::IsInitialized() const {

  return true;
}

void Positioninfo::Swap(Positioninfo* other) {
  if (other != this) {
    std::swap(userid_, other->userid_);
    std::swap(encryption_, other->encryption_);
    std::swap(accuracy_, other->accuracy_);
    std::swap(emergencypostion_, other->emergencypostion_);
    std::swap(multivaluesolution_, other->multivaluesolution_);
    std::swap(key_, other->key_);
    std::swap(applaytime_hour_, other->applaytime_hour_);
    std::swap(applaytime_minute_, other->applaytime_minute_);
    std::swap(applaytime_second_, other->applaytime_second_);
    std::swap(applaytime_tenths_, other->applaytime_tenths_);
    std::swap(longitude_degree_, other->longitude_degree_);
    std::swap(longitude_minute_, other->longitude_minute_);
    std::swap(longitude_second_, other->longitude_second_);
    std::swap(longitude_tenths_, other->longitude_tenths_);
    std::swap(latitude_degree_, other->latitude_degree_);
    std::swap(latitude_minute_, other->latitude_minute_);
    std::swap(latitude_second_, other->latitude_second_);
    std::swap(latitude_tenths_, other->latitude_tenths_);
    std::swap(geodeticheight_, other->geodeticheight_);
    std::swap(detlaelevation_, other->detlaelevation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Positioninfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Positioninfo_descriptor_;
  metadata.reflection = Positioninfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Communicationreceipt::kSendaddrFieldNumber;
const int Communicationreceipt::kRecvaddrFieldNumber;
const int Communicationreceipt::kReceipttimeHourFieldNumber;
const int Communicationreceipt::kReceipttimeMinuteFieldNumber;
const int Communicationreceipt::kReceipttimeSecondFieldNumber;
#endif  // !_MSC_VER

Communicationreceipt::Communicationreceipt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Communicationreceipt::InitAsDefaultInstance() {
}

Communicationreceipt::Communicationreceipt(const Communicationreceipt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Communicationreceipt::SharedCtor() {
  _cached_size_ = 0;
  sendaddr_ = 0u;
  recvaddr_ = 0u;
  receipttime_hour_ = 0u;
  receipttime_minute_ = 0u;
  receipttime_second_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Communicationreceipt::~Communicationreceipt() {
  SharedDtor();
}

void Communicationreceipt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Communicationreceipt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Communicationreceipt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Communicationreceipt_descriptor_;
}

const Communicationreceipt& Communicationreceipt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_beidoumessage_2eproto();
  return *default_instance_;
}

Communicationreceipt* Communicationreceipt::default_instance_ = NULL;

Communicationreceipt* Communicationreceipt::New() const {
  return new Communicationreceipt;
}

void Communicationreceipt::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sendaddr_ = 0u;
    recvaddr_ = 0u;
    receipttime_hour_ = 0u;
    receipttime_minute_ = 0u;
    receipttime_second_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Communicationreceipt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 sendaddr = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sendaddr_)));
          set_has_sendaddr();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_recvaddr;
        break;
      }

      // optional uint32 recvaddr = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recvaddr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recvaddr_)));
          set_has_recvaddr();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_receipttime_hour;
        break;
      }

      // optional uint32 receipttime_hour = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_receipttime_hour:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receipttime_hour_)));
          set_has_receipttime_hour();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_receipttime_minute;
        break;
      }

      // optional uint32 receipttime_minute = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_receipttime_minute:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receipttime_minute_)));
          set_has_receipttime_minute();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_receipttime_second;
        break;
      }

      // optional uint32 receipttime_second = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_receipttime_second:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receipttime_second_)));
          set_has_receipttime_second();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Communicationreceipt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 sendaddr = 1;
  if (has_sendaddr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sendaddr(), output);
  }

  // optional uint32 recvaddr = 2;
  if (has_recvaddr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->recvaddr(), output);
  }

  // optional uint32 receipttime_hour = 3;
  if (has_receipttime_hour()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->receipttime_hour(), output);
  }

  // optional uint32 receipttime_minute = 4;
  if (has_receipttime_minute()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->receipttime_minute(), output);
  }

  // optional uint32 receipttime_second = 5;
  if (has_receipttime_second()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->receipttime_second(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Communicationreceipt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 sendaddr = 1;
  if (has_sendaddr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sendaddr(), target);
  }

  // optional uint32 recvaddr = 2;
  if (has_recvaddr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->recvaddr(), target);
  }

  // optional uint32 receipttime_hour = 3;
  if (has_receipttime_hour()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->receipttime_hour(), target);
  }

  // optional uint32 receipttime_minute = 4;
  if (has_receipttime_minute()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->receipttime_minute(), target);
  }

  // optional uint32 receipttime_second = 5;
  if (has_receipttime_second()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->receipttime_second(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Communicationreceipt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 sendaddr = 1;
    if (has_sendaddr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sendaddr());
    }

    // optional uint32 recvaddr = 2;
    if (has_recvaddr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recvaddr());
    }

    // optional uint32 receipttime_hour = 3;
    if (has_receipttime_hour()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->receipttime_hour());
    }

    // optional uint32 receipttime_minute = 4;
    if (has_receipttime_minute()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->receipttime_minute());
    }

    // optional uint32 receipttime_second = 5;
    if (has_receipttime_second()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->receipttime_second());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Communicationreceipt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Communicationreceipt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Communicationreceipt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Communicationreceipt::MergeFrom(const Communicationreceipt& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sendaddr()) {
      set_sendaddr(from.sendaddr());
    }
    if (from.has_recvaddr()) {
      set_recvaddr(from.recvaddr());
    }
    if (from.has_receipttime_hour()) {
      set_receipttime_hour(from.receipttime_hour());
    }
    if (from.has_receipttime_minute()) {
      set_receipttime_minute(from.receipttime_minute());
    }
    if (from.has_receipttime_second()) {
      set_receipttime_second(from.receipttime_second());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Communicationreceipt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Communicationreceipt::CopyFrom(const Communicationreceipt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Communicationreceipt::IsInitialized() const {

  return true;
}

void Communicationreceipt::Swap(Communicationreceipt* other) {
  if (other != this) {
    std::swap(sendaddr_, other->sendaddr_);
    std::swap(recvaddr_, other->recvaddr_);
    std::swap(receipttime_hour_, other->receipttime_hour_);
    std::swap(receipttime_minute_, other->receipttime_minute_);
    std::swap(receipttime_second_, other->receipttime_second_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Communicationreceipt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Communicationreceipt_descriptor_;
  metadata.reflection = Communicationreceipt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Beidoumessage::kMessagetypeFieldNumber;
const int Beidoumessage::kCommuincationFieldNumber;
const int Beidoumessage::kCommunicationreceiptFieldNumber;
const int Beidoumessage::kPositioninfoFieldNumber;
#endif  // !_MSC_VER

Beidoumessage::Beidoumessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Beidoumessage::InitAsDefaultInstance() {
  commuincation_ = const_cast< ::Communication*>(&::Communication::default_instance());
  communicationreceipt_ = const_cast< ::Communicationreceipt*>(&::Communicationreceipt::default_instance());
  positioninfo_ = const_cast< ::Positioninfo*>(&::Positioninfo::default_instance());
}

Beidoumessage::Beidoumessage(const Beidoumessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Beidoumessage::SharedCtor() {
  _cached_size_ = 0;
  messagetype_ = 0u;
  commuincation_ = NULL;
  communicationreceipt_ = NULL;
  positioninfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Beidoumessage::~Beidoumessage() {
  SharedDtor();
}

void Beidoumessage::SharedDtor() {
  if (this != default_instance_) {
    delete commuincation_;
    delete communicationreceipt_;
    delete positioninfo_;
  }
}

void Beidoumessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Beidoumessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Beidoumessage_descriptor_;
}

const Beidoumessage& Beidoumessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_beidoumessage_2eproto();
  return *default_instance_;
}

Beidoumessage* Beidoumessage::default_instance_ = NULL;

Beidoumessage* Beidoumessage::New() const {
  return new Beidoumessage;
}

void Beidoumessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    messagetype_ = 0u;
    if (has_commuincation()) {
      if (commuincation_ != NULL) commuincation_->::Communication::Clear();
    }
    if (has_communicationreceipt()) {
      if (communicationreceipt_ != NULL) communicationreceipt_->::Communicationreceipt::Clear();
    }
    if (has_positioninfo()) {
      if (positioninfo_ != NULL) positioninfo_->::Positioninfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Beidoumessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 messagetype = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &messagetype_)));
          set_has_messagetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_commuincation;
        break;
      }

      // optional .Communication commuincation = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_commuincation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commuincation()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_communicationreceipt;
        break;
      }

      // optional .Communicationreceipt communicationreceipt = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_communicationreceipt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_communicationreceipt()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_positioninfo;
        break;
      }

      // optional .Positioninfo positioninfo = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_positioninfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_positioninfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Beidoumessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 messagetype = 1;
  if (has_messagetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->messagetype(), output);
  }

  // optional .Communication commuincation = 2;
  if (has_commuincation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->commuincation(), output);
  }

  // optional .Communicationreceipt communicationreceipt = 3;
  if (has_communicationreceipt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->communicationreceipt(), output);
  }

  // optional .Positioninfo positioninfo = 4;
  if (has_positioninfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->positioninfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Beidoumessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 messagetype = 1;
  if (has_messagetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->messagetype(), target);
  }

  // optional .Communication commuincation = 2;
  if (has_commuincation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->commuincation(), target);
  }

  // optional .Communicationreceipt communicationreceipt = 3;
  if (has_communicationreceipt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->communicationreceipt(), target);
  }

  // optional .Positioninfo positioninfo = 4;
  if (has_positioninfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->positioninfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Beidoumessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 messagetype = 1;
    if (has_messagetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->messagetype());
    }

    // optional .Communication commuincation = 2;
    if (has_commuincation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commuincation());
    }

    // optional .Communicationreceipt communicationreceipt = 3;
    if (has_communicationreceipt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->communicationreceipt());
    }

    // optional .Positioninfo positioninfo = 4;
    if (has_positioninfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->positioninfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Beidoumessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Beidoumessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Beidoumessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Beidoumessage::MergeFrom(const Beidoumessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_messagetype()) {
      set_messagetype(from.messagetype());
    }
    if (from.has_commuincation()) {
      mutable_commuincation()->::Communication::MergeFrom(from.commuincation());
    }
    if (from.has_communicationreceipt()) {
      mutable_communicationreceipt()->::Communicationreceipt::MergeFrom(from.communicationreceipt());
    }
    if (from.has_positioninfo()) {
      mutable_positioninfo()->::Positioninfo::MergeFrom(from.positioninfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Beidoumessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Beidoumessage::CopyFrom(const Beidoumessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Beidoumessage::IsInitialized() const {

  return true;
}

void Beidoumessage::Swap(Beidoumessage* other) {
  if (other != this) {
    std::swap(messagetype_, other->messagetype_);
    std::swap(commuincation_, other->commuincation_);
    std::swap(communicationreceipt_, other->communicationreceipt_);
    std::swap(positioninfo_, other->positioninfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Beidoumessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Beidoumessage_descriptor_;
  metadata.reflection = Beidoumessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
